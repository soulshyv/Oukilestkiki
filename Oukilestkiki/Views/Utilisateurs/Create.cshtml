@model Oukilestkiki.Models.UtilisateurCreateEditVm

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Utilisateur</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Utilisateur.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Utilisateur.Nom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Utilisateur.Nom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Utilisateur.Prenom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Utilisateur.Prenom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Utilisateur.Prenom, "", new { @class = "text-danger" })
        </div>
    </div>
     
    <div class="form-group">
        @Html.LabelFor(model => model.Utilisateur.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Utilisateur.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Utilisateur.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Utilisateur.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Utilisateur.Mail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Utilisateur.Mail, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (!Model.IsInscription)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Utilisateur.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Utilisateur.Role.Id, Model.ListeRoles.Select(role => new SelectListItem{Text = role.Libelle, Value = role.Id.ToString()}), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Utilisateur.Role.Id, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    
    @Html.HiddenFor(model => model.IsInscription)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

@if (!Model.IsInscription)
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
